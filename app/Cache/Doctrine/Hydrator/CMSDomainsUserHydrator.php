<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\Query\Query;
use Doctrine\ODM\MongoDB\UnitOfWork;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadataInfo;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class CMSDomainsUserHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['Username']) || (! empty($this->class->fieldMappings['Username']['nullable']) && array_key_exists('Username', $data))) {
            $value = $data['Username'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['Username']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['Username']->setValue($document, $return);
            $hydratedData['Username'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['Email']) || (! empty($this->class->fieldMappings['Email']['nullable']) && array_key_exists('Email', $data))) {
            $value = $data['Email'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['Email']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['Email']->setValue($document, $return);
            $hydratedData['Email'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['Phone']) || (! empty($this->class->fieldMappings['Phone']['nullable']) && array_key_exists('Phone', $data))) {
            $value = $data['Phone'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['Phone']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['Phone']->setValue($document, $return);
            $hydratedData['Phone'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['Password']) || (! empty($this->class->fieldMappings['Password']['nullable']) && array_key_exists('Password', $data))) {
            $value = $data['Password'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['Password']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['Password']->setValue($document, $return);
            $hydratedData['Password'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['Role']) || (! empty($this->class->fieldMappings['Role']['nullable']) && array_key_exists('Role', $data))) {
            $value = $data['Role'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['Role']['type'];
                $return = (string) $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['Role']->setValue($document, $return);
            $hydratedData['Role'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['Profile'])) {
            $reference = $data['Profile'];
            $className = $this->unitOfWork->getClassNameForAssociation($this->class->fieldMappings['Profile'], $reference);
            $mongoId = ClassMetadataInfo::getReferenceId($reference, $this->class->fieldMappings['Profile']['storeAs']);
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['Profile']->setValue($document, $return);
            $hydratedData['Profile'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id']) || (! empty($this->class->fieldMappings['Id']['nullable']) && array_key_exists('_id', $data))) {
            $value = $data['_id'];
            if ($value !== null) {
                $typeIdentifier = $this->class->fieldMappings['Id']['type'];
                $return = $value instanceof \MongoId ? (string) $value : $value;
            } else {
                $return = null;
            }
            $this->class->reflFields['Id']->setValue($document, $return);
            $hydratedData['Id'] = $return;
        }
        return $hydratedData;
    }
}